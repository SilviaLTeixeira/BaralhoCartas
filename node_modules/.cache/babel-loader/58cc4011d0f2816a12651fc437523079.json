{"ast":null,"code":"var _jsxFileName = \"C:\\\\meusprojetos\\\\baralho\\\\baralho-cartas\\\\src\\\\Components\\\\Deck\\\\Deck.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Card from '../Cards/Cards';\nimport \"./Deck.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction rand() {\n  return Math.floor(Math.random() * 360 + 1);\n}\n\nclass Deck extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: \"\",\n      cards: [],\n      success: \"true\",\n      rotate: []\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  async handleClick() {\n    let card = await axios.get(`https://deckofcardsapi.com/api/deck/${this.state.id}/draw/?count=5`);\n    this.setState({\n      cards: [...this.state.cards, card.data.cards[0]],\n      rotate: [...this.state.rotate, rand()],\n      success: card.data.success\n    });\n  }\n\n  async componentDidMount() {\n    let res = await axios.get('https://deckofcardsapi.com/api/deck/new/shuffle/dec ');\n    let data = res.data;\n    this.setState({\n      id: data.deck_id\n    });\n  }\n\n  render() {\n    if (!this.state.success) {\n      alert('Deck Get Empty !!!!!!!!!');\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Deck\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"Deck-title\",\n        children: \"\\uD83D\\uDD36Deck Of Cards\\uD83D\\uDD36\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleClick,\n        className: \"Deck-btn\",\n        children: \"Get Card!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Deck-cardarea\",\n        children: this.state.cards.map((m, idx) => /*#__PURE__*/_jsxDEV(Card, {\n          src: m.image,\n          alt: m.code,\n          rotate: this.state.rotate[idx]\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 41\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }, this);\n  }\n\n}\n\nexport default Deck;","map":{"version":3,"names":["React","Component","axios","Card","rand","Math","floor","random","Deck","constructor","props","state","id","cards","success","rotate","handleClick","bind","card","get","setState","data","componentDidMount","res","deck_id","render","alert","map","m","idx","image","code"],"sources":["C:/meusprojetos/baralho/baralho-cartas/src/Components/Deck/Deck.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Card from '../Cards/Cards';\r\nimport \"./Deck.css\";\r\n\r\n\r\nfunction rand(){\r\n    return Math.floor(Math.random() *360+1);\r\n}\r\n\r\nclass Deck extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={id : \"\",cards:[],success:\"true\",rotate:[]};\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n   \r\n    async handleClick(){\r\n        let card = await axios.get(`https://deckofcardsapi.com/api/deck/${this.state.id}/draw/?count=5`)\r\n        this.setState({cards:[...this.state.cards, card.data.cards[0]],rotate:[...this.state.rotate,rand()],success : card.data.success})\r\n    \r\n    }\r\n    async componentDidMount() {\r\n        let res = await axios.get('https://deckofcardsapi.com/api/deck/new/shuffle/dec ')\r\n        let data = res.data;\r\n        this.setState({id:data.deck_id});\r\n    }\r\n  render() {\r\n      if(!this.state.success){\r\n          alert('Deck Get Empty !!!!!!!!!')\r\n      }\r\n      return( <div className=\"Deck\">\r\n        <h1 className='Deck-title'>ðŸ”¶Deck Of CardsðŸ”¶</h1>\r\n        <button onClick={this.handleClick} className='Deck-btn'>Get Card!!</button>\r\n        <div className='Deck-cardarea'>\r\n        {this.state.cards.map((m,idx)=> <Card src={m.image} key={idx} alt={m.code} rotate={this.state.rotate[idx]}/>)}\r\n            </div>\r\n     \r\n\r\n    </div>);\r\n  }\r\n}\r\n\r\nexport default Deck"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAO,YAAP;;;AAGA,SAASC,IAAT,GAAe;EACX,OAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAe,GAAf,GAAmB,CAA9B,CAAP;AACH;;AAED,MAAMC,IAAN,SAAmBP,SAAnB,CAA6B;EACzBQ,WAAW,CAACC,KAAD,EAAQ;IACf,MAAMA,KAAN;IACA,KAAKC,KAAL,GAAW;MAACC,EAAE,EAAG,EAAN;MAASC,KAAK,EAAC,EAAf;MAAkBC,OAAO,EAAC,MAA1B;MAAiCC,MAAM,EAAC;IAAxC,CAAX;IACA,KAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;EACH;;EAEgB,MAAXD,WAAW,GAAE;IACf,IAAIE,IAAI,GAAG,MAAMhB,KAAK,CAACiB,GAAN,CAAW,uCAAsC,KAAKR,KAAL,CAAWC,EAAG,gBAA/D,CAAjB;IACA,KAAKQ,QAAL,CAAc;MAACP,KAAK,EAAC,CAAC,GAAG,KAAKF,KAAL,CAAWE,KAAf,EAAsBK,IAAI,CAACG,IAAL,CAAUR,KAAV,CAAgB,CAAhB,CAAtB,CAAP;MAAiDE,MAAM,EAAC,CAAC,GAAG,KAAKJ,KAAL,CAAWI,MAAf,EAAsBX,IAAI,EAA1B,CAAxD;MAAsFU,OAAO,EAAGI,IAAI,CAACG,IAAL,CAAUP;IAA1G,CAAd;EAEH;;EACsB,MAAjBQ,iBAAiB,GAAG;IACtB,IAAIC,GAAG,GAAG,MAAMrB,KAAK,CAACiB,GAAN,CAAU,sDAAV,CAAhB;IACA,IAAIE,IAAI,GAAGE,GAAG,CAACF,IAAf;IACA,KAAKD,QAAL,CAAc;MAACR,EAAE,EAACS,IAAI,CAACG;IAAT,CAAd;EACH;;EACHC,MAAM,GAAG;IACL,IAAG,CAAC,KAAKd,KAAL,CAAWG,OAAf,EAAuB;MACnBY,KAAK,CAAC,0BAAD,CAAL;IACH;;IACD,oBAAQ;MAAK,SAAS,EAAC,MAAf;MAAA,wBACN;QAAI,SAAS,EAAC,YAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADM,eAEN;QAAQ,OAAO,EAAE,KAAKV,WAAtB;QAAmC,SAAS,EAAC,UAA7C;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFM,eAGN;QAAK,SAAS,EAAC,eAAf;QAAA,UACC,KAAKL,KAAL,CAAWE,KAAX,CAAiBc,GAAjB,CAAqB,CAACC,CAAD,EAAGC,GAAH,kBAAU,QAAC,IAAD;UAAM,GAAG,EAAED,CAAC,CAACE,KAAb;UAA8B,GAAG,EAAEF,CAAC,CAACG,IAArC;UAA2C,MAAM,EAAE,KAAKpB,KAAL,CAAWI,MAAX,CAAkBc,GAAlB;QAAnD,GAAyBA,GAAzB;UAAA;UAAA;UAAA;QAAA,QAA/B;MADD;QAAA;QAAA;QAAA;MAAA,QAHM;IAAA;MAAA;MAAA;MAAA;IAAA,QAAR;EASH;;AA9B0B;;AAiC7B,eAAerB,IAAf"},"metadata":{},"sourceType":"module"}