{"ast":null,"code":"var _jsxFileName = \"C:\\\\meusprojetos\\\\baralho\\\\baralho-cartas\\\\src\\\\Components\\\\Deck\\\\Deck.js\",\n    _s = $RefreshSig$();\n\nimport { memo, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Cards from '../Cards/Cards';\nimport \"./Deck.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction rand() {\n  return Math.floor(Math.random() * 360 + 1);\n}\n\nconst Deck = () => {\n  _s();\n\n  const [id, setId] = useState(\"\");\n  const [cards, setCards] = useState([]);\n  const [success, setSuccess] = useState(true);\n  const [rotate, setRotate] = useState([]);\n\n  const handleClick = async event => {\n    let card = await axios.get(`https://deckofcardsapi.com/api/deck/${id}/draw/?count=5`);\n    setCards(...cards, ...card.data.cards);\n    setRotate(...rotate, rand());\n    setSuccess(card.data.success);\n  };\n\n  useEffect(() => {\n    async function getData() {\n      let res = await axios.get('https://deckofcardsapi.com/api/deck/new/shuffle');\n      let data = res.data;\n      setId(data.deck_id);\n    }\n\n    getData();\n  }, []);\n\n  if (!success) {\n    alert('Deck Get Empty !!!!!!!!!');\n  }\n\n  console.log(cards);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Deck\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"Deck-title\",\n      children: \"\\uD83D\\uDD36Deck Of Cards\\uD83D\\uDD36\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      className: \"Deck-btn\",\n      children: \"Get Card!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Deck-cardarea\",\n      children: cards.map((m, idx) => /*#__PURE__*/_jsxDEV(Cards, {\n        src: m.image,\n        alt: m.code,\n        rotate: rotate[idx]\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 40\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Deck, \"3uO728Sn5KF7pKgNUi9Z6cbP3us=\");\n\n_c = Deck;\nexport default _c2 = /*#__PURE__*/memo(Deck);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Deck\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["memo","useEffect","useState","axios","Cards","rand","Math","floor","random","Deck","id","setId","cards","setCards","success","setSuccess","rotate","setRotate","handleClick","event","card","get","data","getData","res","deck_id","alert","console","log","map","m","idx","image","code"],"sources":["C:/meusprojetos/baralho/baralho-cartas/src/Components/Deck/Deck.js"],"sourcesContent":["import {memo, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport Cards from '../Cards/Cards';\r\nimport \"./Deck.css\";\r\n\r\nfunction rand() {\r\n    return Math.floor(Math.random() * 360 + 1);\r\n}\r\nconst Deck = () => {\r\n    const [id, setId] = useState(\"\")\r\n    const [cards, setCards] = useState([])\r\n    const [success, setSuccess] = useState(true)\r\n    const [rotate, setRotate] = useState([])\r\n\r\n\r\n    const handleClick = async (event) => {\r\n        let card = await axios.get(`https://deckofcardsapi.com/api/deck/${id}/draw/?count=5`)\r\n        setCards(...cards, ...card.data.cards)\r\n        setRotate(...rotate, rand())\r\n        setSuccess(card.data.success)\r\n\r\n\r\n    }\r\n    useEffect(() => {\r\n        async function getData() {\r\n            let res = await axios.get('https://deckofcardsapi.com/api/deck/new/shuffle')\r\n            let data = res.data;\r\n            setId(data.deck_id)\r\n        }\r\n        getData()\r\n    }, [])\r\n\r\n\r\n    if (!success) {\r\n        alert('Deck Get Empty !!!!!!!!!')\r\n    }\r\n    console.log(cards)\r\n    return (\r\n        <div className=\"Deck\">\r\n            <h1 className='Deck-title'>ðŸ”¶Deck Of CardsðŸ”¶</h1>\r\n            <button onClick={handleClick} className='Deck-btn'>Get Card!!</button>\r\n            <div className='Deck-cardarea'>\r\n                {cards.map((m, idx) => <Cards src={m.image} key={idx} alt={m.code} rotate={rotate[idx]} />)}\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default memo(Deck)"],"mappings":";;;AAAA,SAAQA,IAAR,EAAcC,SAAd,EAAyBC,QAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAO,YAAP;;;AAEA,SAASC,IAAT,GAAgB;EACZ,OAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAAhB,GAAsB,CAAjC,CAAP;AACH;;AACD,MAAMC,IAAI,GAAG,MAAM;EAAA;;EACf,MAAM,CAACC,EAAD,EAAKC,KAAL,IAAcT,QAAQ,CAAC,EAAD,CAA5B;EACA,MAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,IAAD,CAAtC;EACA,MAAM,CAACc,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,EAAD,CAApC;;EAGA,MAAMgB,WAAW,GAAG,MAAOC,KAAP,IAAiB;IACjC,IAAIC,IAAI,GAAG,MAAMjB,KAAK,CAACkB,GAAN,CAAW,uCAAsCX,EAAG,gBAApD,CAAjB;IACAG,QAAQ,CAAC,GAAGD,KAAJ,EAAW,GAAGQ,IAAI,CAACE,IAAL,CAAUV,KAAxB,CAAR;IACAK,SAAS,CAAC,GAAGD,MAAJ,EAAYX,IAAI,EAAhB,CAAT;IACAU,UAAU,CAACK,IAAI,CAACE,IAAL,CAAUR,OAAX,CAAV;EAGH,CAPD;;EAQAb,SAAS,CAAC,MAAM;IACZ,eAAesB,OAAf,GAAyB;MACrB,IAAIC,GAAG,GAAG,MAAMrB,KAAK,CAACkB,GAAN,CAAU,iDAAV,CAAhB;MACA,IAAIC,IAAI,GAAGE,GAAG,CAACF,IAAf;MACAX,KAAK,CAACW,IAAI,CAACG,OAAN,CAAL;IACH;;IACDF,OAAO;EACV,CAPQ,EAON,EAPM,CAAT;;EAUA,IAAI,CAACT,OAAL,EAAc;IACVY,KAAK,CAAC,0BAAD,CAAL;EACH;;EACDC,OAAO,CAACC,GAAR,CAAYhB,KAAZ;EACA,oBACI;IAAK,SAAS,EAAC,MAAf;IAAA,wBACI;MAAI,SAAS,EAAC,YAAd;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAQ,OAAO,EAAEM,WAAjB;MAA8B,SAAS,EAAC,UAAxC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ,eAGI;MAAK,SAAS,EAAC,eAAf;MAAA,UACKN,KAAK,CAACiB,GAAN,CAAU,CAACC,CAAD,EAAIC,GAAJ,kBAAY,QAAC,KAAD;QAAO,GAAG,EAAED,CAAC,CAACE,KAAd;QAA+B,GAAG,EAAEF,CAAC,CAACG,IAAtC;QAA4C,MAAM,EAAEjB,MAAM,CAACe,GAAD;MAA1D,GAA0BA,GAA1B;QAAA;QAAA;QAAA;MAAA,QAAtB;IADL;MAAA;MAAA;MAAA;IAAA,QAHJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAWH,CAxCD;;GAAMtB,I;;KAAAA,I;AA2CN,kCAAeT,IAAI,CAACS,IAAD,CAAnB"},"metadata":{},"sourceType":"module"}